import pytest
from polinome import *

"""
Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:

Triangle	 	Tn=n(n+1)/2= 1/2*n^2 + 1/2*n	 	1, 3, 6, 10, 15, ...
Pentagonal	 	Pn=n(3n−1)/2 = 3/2*n^2 - 1/2*n	 	1, 5, 12, 22, 35, ...
Hexagonal	 	Hn=n(2n−1) = 2*n^2 - n	 	1, 6, 15, 28, 45, ...
It can be verified that T285 = P165 = H143 = 40755.

Find the next triangle number that is also pentagonal and hexagonal.
"""


@pytest.fixture(scope='module')
def polinomials():
    polinomials = {
        'triangle': Polinome(0, 1/2, 1/2, n=500),
        'pentagonal': Polinome(0, -1/2, 3/2, n=500),
        'hexagonal': Polinome(0, -1, 2, n=500)
    }
    yield polinomials

def test_get_natural_results(polinomials):
    assert polinomials['triangle']._get_natural_results(5) == [1, 3, 6, 10, 15]
    assert polinomials['pentagonal']._get_natural_results(5) == [1, 5, 12, 22, 35]
    assert polinomials['hexagonal']._get_natural_results(5) == [1, 6, 15, 28, 45]


def test_intersection(polinomials):
    my_set = polinomials['triangle'].intersection(polinomials['pentagonal'].intersection(polinomials['hexagonal'].get_results()))
    assert my_set == {1, 40755}


def test_get_index(polinomials):
    assert polinomials['triangle'].get_index(40755) == 285

    assert polinomials['pentagonal'].get_index(40755) == 165

    assert polinomials['hexagonal'].get_index(40755) == 143
